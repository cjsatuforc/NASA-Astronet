classdef Wgs84ToEnuRequest < robotics.ros.Message
    %Wgs84ToEnuRequest MATLAB implementation of asctec_hl_comm/Wgs84ToEnuRequest
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2018 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'asctec_hl_comm/Wgs84ToEnuRequest' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '800b265188e13fdc7e121024d9b6fa27' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        Lat
        Lon
        Alt
    end
    
    properties (Constant, Hidden)
        PropertyList = {'Alt', 'Lat', 'Lon'} % List of non-constant message properties
        ROSPropertyList = {'alt', 'lat', 'lon'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = Wgs84ToEnuRequest(msg)
            %Wgs84ToEnuRequest Construct the message object Wgs84ToEnuRequest
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function lat = get.Lat(obj)
            %get.Lat Get the value for property Lat
            lat = double(obj.JavaMessage.getLat);
        end
        
        function set.Lat(obj, lat)
            %set.Lat Set the value for property Lat
            validateattributes(lat, {'numeric'}, {'nonempty', 'scalar'}, 'Wgs84ToEnuRequest', 'Lat');
            
            obj.JavaMessage.setLat(lat);
        end
        
        function lon = get.Lon(obj)
            %get.Lon Get the value for property Lon
            lon = double(obj.JavaMessage.getLon);
        end
        
        function set.Lon(obj, lon)
            %set.Lon Set the value for property Lon
            validateattributes(lon, {'numeric'}, {'nonempty', 'scalar'}, 'Wgs84ToEnuRequest', 'Lon');
            
            obj.JavaMessage.setLon(lon);
        end
        
        function alt = get.Alt(obj)
            %get.Alt Get the value for property Alt
            alt = double(obj.JavaMessage.getAlt);
        end
        
        function set.Alt(obj, alt)
            %set.Alt Set the value for property Alt
            validateattributes(alt, {'numeric'}, {'nonempty', 'scalar'}, 'Wgs84ToEnuRequest', 'Alt');
            
            obj.JavaMessage.setAlt(alt);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.Lat = obj.Lat;
            cpObj.Lon = obj.Lon;
            cpObj.Alt = obj.Alt;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.Lat = strObj.Lat;
            obj.Lon = strObj.Lon;
            obj.Alt = strObj.Alt;
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.Lat = obj.Lat;
            strObj.Lon = obj.Lon;
            strObj.Alt = obj.Alt;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.asctec_hl_comm.Wgs84ToEnuRequest.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.asctec_hl_comm.Wgs84ToEnuRequest;
            obj.reload(strObj);
        end
    end
end
