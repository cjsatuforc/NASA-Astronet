<?xml version="1.0"?>
<launch>
    <!-- =========================================================================
    =================== BASIC SIMULATION OPTIONS/PARAMETERS ======================
    ========================================================================== -->
    
    <!-- Context options (NB: THESE ARE OVERRIDDEN BY ENVIRONMENT VARIABLES)   -->
    <arg name="ns" default="" />
    <arg name="pose" default="" />
    <arg name="robot" default="sim" />            <!-- Robot name              -->
    <arg name="world" default="aerolab-vicon" />            <!-- World name              -->
    <arg name="output" default="log"/>            <!-- Where nodes should log  -->
    <arg name="nodes" default=""/>                <!-- Launch specific nodes   -->
    <arg name="sim" default="local" />            <!-- SIM IP address          -->
    <arg name="llp" default="disabled" />            <!-- LLP IP address          -->
    <arg name="mlp" default="disabled" />            <!-- MLP IP address          -->
    <arg name="rec" default="" />                 <!-- Record local data       -->
    <arg name="dds" default="true" />             <!-- Enable DDS              -->

    <!-- General options -->
    <arg name="gviz" default="false" />
    <arg name="rviz" default="false" />
    <arg name="sviz" default="true" /> 
    <arg name="rqt" default="false" /> 
    <arg name="gds" default="false" /> 
    <arg name="vmware" default="false" />

    <!-- Simulation-specific options -->
    <arg name="insert" default="2" />             <!-- Auto-insert one or more robots  -->




    <!-- =========================================================================
    =================== SIMULATION ENVIRONMENT SETUP =============================
    ========================================================================== -->

    <!-- Make sure all environment variables are set for controller -->
    <env if="$(eval optenv('ASTROBEE_ROBOT','')=='')" name="ASTROBEE_ROBOT" value="$(arg robot)" />
    <env if="$(eval optenv('ASTROBEE_WORLD','')=='')" name="ASTROBEE_WORLD" value="$(arg world)" />
    <env if="$(eval optenv('ASTROBEE_CONFIG_DIR','')=='')" name="ASTROBEE_CONFIG_DIR" value="$(find astrobee)/config" />
    <env if="$(eval optenv('ASTROBEE_RESOURCE_DIR','')=='')" name="ASTROBEE_RESOURCE_DIR" value="$(find astrobee)/resources" />
    <env if="$(eval optenv('ROSCONSOLE_CONFIG_FILE','')=='')" name="ROSCONSOLE_CONFIG_FILE" value="$(find astrobee)/resources/logging.config"/>

    <!-- Declare our global logging format -->
    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] : (${logger}) ${message}"/>




    <!-- =========================================================================
    =================== LAUNCH SIMULATION ON GAZEBO ==============================
    ========================================================================== -->

    <!-- Always launch on the local machine -->
    <group>
        <machine name ="local" address="localhost" default="true"/>
        <!-- Start ground controller services -->
        <include if="$(arg gviz)" file="$(find astrobee)/launch/controller/gviz.launch"/>
        <include if="$(arg rviz)" file="$(find astrobee)/launch/controller/rviz.launch"/>
        <include if="$(arg gds)" file="$(find astrobee)/launch/controller/gds.launch"/>
        <include if="$(arg rqt)" file="$(find astrobee)/launch/controller/rqt.launch"/>
        <!-- Launch a recorder for this robot-->
        <include unless="$(eval arg('rec')=='')" file="$(find astrobee)/launch/controller/bagrecord.launch">
            <arg name="bag" value="$(arg rec)"/>
        </include>
    </group>

    <!-- Allow the simulator to be optionally launched remotely-->
    <group>
        <!-- Connect and update environment variables if required -->
        <machine unless="$(eval arg('sim')=='local')" name="sim_server" default="true"
        address="$(arg sim)" user="astrobee" password="astrobee" timeout="10"/>
        <!-- Update the environment variables relating to absolute paths -->
        <env unless="$(eval arg('sim')=='local')"
        name="ASTROBEE_CONFIG_DIR" value="/home/astrobee/native/config" />
        <env unless="$(eval arg('sim')=='local')"
        name="ASTROBEE_RESOURCE_DIR" value="home/astrobee/native/resources" />
        <env unless="$(eval arg('sim')=='local')" 
        name="ROSCONSOLE_CONFIG_FILE" value="/home/astrobee/native/resources/logging.config"/>
        <env unless="$(eval arg('sim')=='local')" name="DISPLAY" value=":0"/>
        <env unless="$(eval arg('sim')=='local')" name="ROS_IP" value="$(arg sim)"/>
        
        <!-- Start the simulator -->
        <include file="$(find astrobee)/launch/controller/sim_start.launch">
            <arg name="world" value="$(arg world)" />
            <arg name="sviz" value="$(arg sviz)" />
            <arg name="vmware" value="$(arg vmware)" />
        </include>

        <!-- Spawn the publisher and subscriber services for visualizing vicon data -->
        <node name="vicon_visualizer" pkg="aerolab" type="viconviz" output="screen" />

    </group>



    <!-- =========================================================================
    ======================== SPAWN ONE ASTROBEE ROBOT ============================
    This robot is launched to behave in only gesture control mode in the simulator
    ========================================================================== -->

    <group if="$(eval arg('insert')==1)" ns="/astrobeesim1">
        <!-- Set the TF prefix, create a robot description and joint state publisher -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find astrobee_description)/urdf/astrobee.urdf.xacro world:=$(arg world) vmware:=$(arg vmware)" />

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="astrobee_state_publisher" />
        <arg name="gpose_1" value="2 0 4.8 0 0 0 1"/>
        <node name="spawn_astrobee_1" pkg="astrobee_gazebo" type="spawn_model"
        args="-param /astrobeesim1/robot_description -urdf -model hbirddg -pose  $(arg gpose_1)" />    
    </group>

    <group if="$(eval arg('insert')==1)">
        <!-- Launch publishing and subscribing service for the matlab simulation port for the gesture control mode-->
        <node pkg="aerolab" type="hbirddgState" name="hbirddgState" respawn="true" />
        <!-- launch publisher based on messages generated by MATLAB -->
        <node pkg="aerolab" type="hbirddgPub" name="hbirddgPub" respawn="true" />
    </group>


    <!-- =========================================================================
    ======================== SPAWN TWO ASTROBEE ROBOTS ===========================
    = Two robots are launched behaving in both gesture control and coverage mode =
    ========================================================================== -->
    <group if="$(eval arg('insert')==2)" ns="/astrobeesim2">
        <!-- Define Robot Description  -->
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find astrobee_description)/urdf/astrobee.urdf.xacro world:=$(arg world) vmware:=$(arg vmware)" />

        <!-- Define global poses for both astrobee robots -->
        <arg name="gpose_1" value="1.5 0 4.8 0 0 0 1"/>
        <arg name="gpose_2" value="2.5 0 4.8 0 0 0 1"/>

        <!-- Spawn 2 astrobee robots -->
        <node name="spawn_astrobee_1" pkg="astrobee_gazebo" type="spawn_model"
            args="-param /astrobeesim2/robot_description -urdf -model hbirdb -pose  $(arg gpose_1)" />    
        <node name="spawn_astrobee_2" pkg="astrobee_gazebo" type="spawn_model"
            args="-param /astrobeesim2/robot_description -urdf -model hbirddg -pose  $(arg gpose_2)" />

    </group>

    <group if="$(eval arg('insert')==2)">
        <!-- Launch publishing and subscribing service for the matlab simulation
        port for both the coverage control mode and gesture control mode-->
        <!-- launch state publishers for MATLAB interface callback -->
        <node pkg="aerolab" type="hbirdbState" name="hbirdbState" respawn="true" />
        <node pkg="aerolab" type="hbirddgState" name="hbirddgState" respawn="true" />
        <!-- launch publishers based on messages generated by MATLAB -->
        <node pkg="aerolab" type="hbirdbPub" name="hbirdbPub" respawn="true" />
        <node pkg="aerolab" type="hbirddgPub" name="hbirddgPub" respawn="true" />
    </group>

</launch>